validate: validate the schema, makes no changes to the database.
#update: update the schema.
#create: creates the schema, destroying previous data.
#create-drop: drop the schema at the end of the session
#none: is all other cases.
logging.level.org.springframework.boot.autoconfigure=ERROR

debug=true
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.search.default.indexmanager=elasticsearch
#spring.jpa.properties.hibernate.search.default.elasticsearch.host=<Elasticsearch-url>
#spring.jpa.properties.hibernate.search.default.elasticsearch.index_schema_management_strategy=drop-and-create
#spring.jpa.properties.hibernate.search.default.elasticsearch.required_index_status=yellow


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# JDBC Settings...
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/herbaLand?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# a data (DML) script resource reference
# (to chyba w tej wersji nie działa) spring.datasource.data=classpath:META-INF/Dump20231017/herbaland_authorizations.sql,META-INF/Dump20231017/herbaland_categories.sql,META-INF/Dump20231017/herbaland_disease_working_areas.sql,META-INF/Dump20231017/herbaland_diseases.sql,META-INF/Dump20231017/herbaland_diseases_categories.sql,META-INF/Dump20231017/herbaland_files.sql,META-INF/Dump20231017/herbaland_latin_plant_description.sql,META-INF/Dump20231017/herbaland_medical_plants.sql,META-INF/Dump20231017/herbaland_plants_categories.sql,META-INF/Dump20231017/herbaland_polish_plant_description.sql,META-INF/Dump20231017/herbaland_users.sql,META-INF/Dump20231017/herbaland_users_authorizations.sql,META-INF/Dump20231017/herbaland_users_plants.sql,META-INF/Dump20231017/herbaland_working_areas.sql
# a charset for reading SQL scripts
spring.sql.init.encoding=UTF-8


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB


#spring.datasource.name=# name of the data source
#spring.datasource.initialize=true # populate using data.sql
#spring.datasource.schema= # a schema (DDL) script resource reference
#spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
#spring.datasource.continue-on-error=false # continue even if can't be initialized
#spring.datasource.separator=; # statement separator in SQL initialization scripts
#spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set)
#spring.datasource.max-active=100 # Advanced configuration...
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10
#spring.datasource.validation-query=
#spring.datasource.test-on-borrow=false
#spring.datasource.test-on-return=false
#spring.datasource.test-while-idle=
#spring.datasource.time-between-eviction-runs-millis=
#spring.datasource.min-evictable-idle-time-millis=
#spring.datasource.max-wait=
#spring.datasource.jmx-enabled=false # Export JMX MBeans (if supported)


# Show or not log for each sql query
spring.jpa.hibernate.show-sql=true
spring.jpa.show-sql=true

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.web.locale=pl_PL
spring.web.locale-resolver=fixed

# spring.sql.init.data-locations=classpath:META-INF/herbaland-schema.sql
# spring.sql.init.data-locations=classpath:classpath:META-INF/Dump20231017/herbaland_authorizations.sql,META-INF/Dump20231017/herbaland_categories.sql,META-INF/Dump20231017/herbaland_disease_working_areas.sql,META-INF/Dump20231017/herbaland_diseases.sql,META-INF/Dump20231017/herbaland_diseases_categories.sql,META-INF/Dump20231017/herbaland_files.sql,META-INF/Dump20231017/herbaland_latin_plant_description.sql,META-INF/Dump20231017/herbaland_medical_plants.sql,META-INF/Dump20231017/herbaland_plants_categories.sql,META-INF/Dump20231017/herbaland_polish_plant_description.sql,META-INF/Dump20231017/herbaland_users.sql,META-INF/Dump20231017/herbaland_users_authorizations.sql,META-INF/Dump20231017/herbaland_users_plants.sql,META-INF/Dump20231017/herbaland_working_areas.sql
# może być też never
spring.sql.init.mode=always

#spring.jpa.generate-ddl=true
#for Spring Boot before 2.5:
# DEPRECATED: spring.datasource.initialization-mode=always
# NOT WORKS spring.jpa.defer-datasource-initialization=true
logging.level.pl.vistula=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate=ERROR
spring.mvc.log-request-details=true

hibernate.charset=UTF-8
hibernate.character_encoding=UTF-8
hibernate.use_unicode=true

# HTTP encoding (HttpEncodingProperties)
# the encoding of HTTP requests/responses
server.servlet.encoding.charset=UTF-8
# enable http encoding support
server.servlet.encoding.enabled=true
# force the configured encoding
server.servlet.encoding.force=true
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;
spring.datasource.hikari.data-source-properties.useUnicode=true
spring.datasource.hikari.data-source-properties.characterEncoding=UTF-8
spring.jpa.generate-ddl=true
#spring.mandatory-file-encoding=UTF-8
